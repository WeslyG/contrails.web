// @flow
declare module 'react-draggable' {
    declare export type DraggableBounds = {
        left?: number,
        right?: number,
        top?: number,
        bottom?: number,
    }

    declare export type DraggableEventHandler = (e: SytheticMouseEvent, data: DraggableData) => void | false;

    declare export type DraggableData = {|
        node: HTMLElement,
        x: number,
        y: number,
        deltaX: number,
        deltaY: number,
        lastX: number,
        lastY: number,
    |};

    declare export type ControlPosition = { x: number, y: number };

    declare export type DraggableCoreProps = {|
        allowAnyClick?: boolean,
        cancel?: string,
        disabled?: boolean,
        enableUserSelectHack?: boolean,
        offsetParent?: HTMLElement,
        grid?: [number, number],
        handle?: string,
        onStart?: DraggableEventHandler,
        onDrag?: DraggableEventHandler,
        onStop?: DraggableEventHandler,
        onMouseDown?: (e: MouseEvent) => void,
        children?: React$Element<any>[];
    |};

    declare export type DraggableProps = {|
        allowAnyClick?: boolean,
        cancel?: string,
        disabled?: boolean,
        enableUserSelectHack?: boolean,
        offsetParent?: HTMLElement,
        grid?: [number, number],
        handle?: string,
        onStart?: DraggableEventHandler,
        onDrag?: DraggableEventHandler,
        onStop?: DraggableEventHandler,
        onMouseDown?: (e: MouseEvent) => void,

        axis?: 'both' | 'x' | 'y' | 'none',
        bounds?: DraggableBounds | string | false,
        defaultClassName?: string,
        defaultClassNameDragging?: string,
        defaultClassNameDragged?: string,
        defaultPosition?: ControlPosition,
        position?: ControlPosition,
        children?: React$Element<any>[];
    |};

    declare export default class Draggable extends React$Component<void, DraggableProps, {}> {
    }

    declare export class DraggableCore extends React$Component<void, DraggableCoreProps, {}> {
    }
}
