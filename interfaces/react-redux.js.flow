// @flow
declare module 'react-redux' {
    declare type Dispatch = (action: Object) => any;
    declare var Provider: ReactClass<*>;

    declare function connect<TProps, TResultProps, TOwnProps>(
        mapStateToProps: (x: any, y: TOwnProps) => $Diff<TResultProps, { dispatch: Dispatch }>,
        mapDispatchToProps?: null,
        merge?: null
    ): (x: ReactClass<TResultProps>) => ReactClass<*>;


    declare function connect<TProps, TResultProps, TOwnProps>(
        mapStateToProps: (x: any, y: TOwnProps) => TProps,
        mapDispatchToProps: (x: Dispatch, y?: TOwnProps) => $Diff<TResultProps, TProps>,
        merge?: null
    ): (x: ReactClass<TResultProps>) => ReactClass<*>;

    declare function connect<TProps, TCallbacks, TResultProps, TOwnProps>(
        mapStateToProps: (x: any, y: TOwnProps) => TProps,
        mapDispatchToProps: (x: Dispatch, y: TOwnProps) => TCallbacks,
        merge: (x: TProps, y: TCallbacks, y: TOwnProps) => TResultProps
    ): (x: ReactClass<TResultProps>) => ReactClass<*>;
}
